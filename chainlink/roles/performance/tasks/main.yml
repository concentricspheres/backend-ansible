---
- name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
  shell: swapoff -a
  when: "'eth_nodes' in group_names"
  check_mode: true
- name: Disable SWAP in fstab 
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'
  when: "'eth_nodes' in group_names"
  check_mode: true

- name: "STEP 1: Get / mounted SRC device"
  shell: mount |grep -E "\s/\s"|awk '{print $1}'
  register: "rootdevice"
  when: "'eth_nodes' in group_names"
- name: "STEP 2: Get / mounted FS"
  shell: mount |grep -E "\s/\s"|awk '{print $5}'
  register: "rootfs"
  when: "'eth_nodes' in group_names"
  check_mode: true
- debug:
    msg: "Validate the / mount output: {{ rootdevice.stdout }}"
  when: "'eth_nodes' in group_names"
  check_mode: true

- name: "Add mount noatime options for /"
  mount:
    path: "/"
    src: "{{ rootdevice.stdout }}"
    fstype: "{{ rootfs.stdout }}"
    opts: "noatime"
    state: "present"
  when: rootdevice.stdout == "/"  and "'eth_nodes' in group_names"
  check_mode: true
- name: Remount / mounted volume with mount options noatime
  ansible.posix.mount:
    path: /
    state: remounted
  when: rootdevice.stdout == "/"  and "'eth_nodes' in group_names"
  check_mode: true

  
- name: "Checking GRUB cmdline"
  shell: grep GRUB_CMDLINE_LINUX=/etc/default/grub|grep -c "mitigations=off"
  register: grub_cfg_grep
  check_mode: true
- debug:
    msg: "{{ grub_cfg_grep }}"

- name: "Configuring GRUB cmdline"
  replace:
    path: '/etc/default/grub'
    regexp: '^GRUB_CMDLINE_LINUX="(([A-Za-z0-9\._=]+\s*)*)"$'
    replace: 'GRUB_CMDLINE_LINUX="\1 mitigations=off"'
  when: ("'baremetal_nodes' in group_names") and (grub_cfg_grep is succeeded) and (grub_cfg_grep.stdout == '0')

- name: update-grub
  shell: update-grub
  loop: [1] 
  when: ("'baremetal_nodes' in group_names") and (grub_cfg_grep is succeeded) and  (grub_cfg_grep.stdout == '0')

- name: reboot if we need it
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1 
  poll: 0
  ignore_errors: true
  when: ("'baremetal_nodes' in group_names") and  (grub_cfg_grep is succeeded) and (grub_cfg_grep.stdout == '0')

- name: waiting for server to come back
  local_action: wait_for host={{ansible_fqdn}} state=started timeout=600 delay=15
  when: ("'baremetal_nodes' in group_names") and (grub_cfg_grep is succeeded) and (grub_cfg_grep.stdout == '0')
  
