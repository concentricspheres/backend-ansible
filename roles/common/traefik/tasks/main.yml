---

- name: Install git and dbus
  apt:
    pkg:
    - git
    - dbus
  become: true

- name: Start service dbus, if not started
  ansible.builtin.service:
    name: dbus.socket
    state: started
  become: true

- name: clone repo
  ansible.builtin.git:
    repo: https://github.com/CryptoManufaktur-io/base-docker-environment.git
    dest: ~/base-docker-environment
    version: main

- name: Create .env file
  ansible.builtin.copy:
    src: ~/base-docker-environment/default.env
    dest: ~/base-docker-environment/.env
    remote_src: yes

- name: set DOMAIN to cryptomanufaktur.net
  ansible.builtin.lineinfile:
    path: ~/base-docker-environment/.env
    regexp: '^DOMAIN='
    line: DOMAIN=cryptomanufaktur.net

- name: set DDNS_PROXY to false
  ansible.builtin.lineinfile:
    path: ~/base-docker-environment/.env
    regexp: '^DDNS_PROXY='
    line: DDNS_PROXY=false

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname_short }}"
  become: true

- name: Print hostname
  debug:
    msg: "Hostname set to {{ inventory_hostname_short }}"

- name: Get hostname
  shell: hostname
  register: result

- name: Print the var
  debug:
    var: result

- name: set DDNS_SUBDOMAIN to hostname
  ansible.builtin.lineinfile:
    path: ~/base-docker-environment/.env
    regexp: '^DDNS_SUBDOMAIN='
    line: DDNS_SUBDOMAIN={{result.stdout}}

- name: set ACME_EMAIL
  ansible.builtin.lineinfile:
    path: ~/base-docker-environment/.env
    regexp: '^ACME_EMAIL='
    line: ACME_EMAIL={{traefik_acme_email}}

- name: set CF_EMAIL
  ansible.builtin.lineinfile:
    path: ~/base-docker-environment/.env
    regexp: '^CF_EMAIL='
    line: CF_EMAIL={{traefik_cf_email}}

- name: set CF_API_TOKEN
  ansible.builtin.lineinfile:
    path: ~/base-docker-environment/.env
    regexp: '^CF_API_TOKEN='
    line: CF_API_TOKEN={{traefik_cf_api_token}}

- name: Create custom-prom.yml
  template:
    src: custom-prom.j2
    dest: ~/base-docker-environment/prometheus/custom-prom.yml

- name: Build project
  ansible.builtin.shell: docker compose build
  args:
    chdir: ~/base-docker-environment

- name: Run docker project
  ansible.builtin.shell: docker compose up -d
  args:
    creates: /etc/traefik/success
    chdir: ~/base-docker-environment
