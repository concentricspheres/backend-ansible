---
- name: Check traefik directory
  stat:
    path: ~/traefik
  register: traefik_check

- name: update traefik
  ansible.builtin.shell: ./ethd update
  args:
    chdir: ~/traefik
    executable: /bin/bash
  when: traefik_check.stat.isdir is defined and traefik_check.stat.isdir

- name: restart changed software
  ansible.builtin.shell: ./ethd up
  args:
    chdir: ~/traefik
    executable: /bin/bash
  register: up_output
  when: traefik_check.stat.isdir is defined and traefik_check.stat.isdir

- name: Result of ./ethd up
  debug:
    var: up_output.stderr_lines
  when: traefik_check.stat.isdir is defined and traefik_check.stat.isdir

- name: Skip node update?
  meta: end_host
  when: skip_node | default(false)

- name: update node software
  ansible.builtin.shell: ./ethd update
  args:
    chdir: ~/{{clone_dir}}
    executable: /bin/bash

- name: set group variables
  ansible.builtin.lineinfile:
    path: "~/{{ clone_dir }}/.env"
    regexp: '^{{ item.key }}='
    line: "{{ item.key }}={{ item.value }}"
  loop: "{{ group_env_variables }}"
  when: group_env_variables is defined

- name: set variables
  ansible.builtin.lineinfile:
    path: "~/{{ clone_dir }}/.env"
    regexp: '^{{ item.key }}='
    line: "{{ item.key }}={{ item.value }}"
  loop: "{{ env_variables }}"
  when: env_variables is defined

- name: Deploy custom-prom.yml file
  ansible.builtin.template:
    src: custom-prom.yml.j2
    dest: ~/{{ clone_dir }}/prometheus/custom-prom.yml
  when: prom_environment is defined

- name: restart changed software
  ansible.builtin.shell: ./ethd up
  args:
    chdir: ~/{{clone_dir}}
    executable: /bin/bash
  register: up_output

- name: Result of ./ethd up
  debug:
    var: up_output.stderr_lines

- name: Wait for the Docker container to stabilize
  pause:
    seconds: 30

- name: Get execution container info
  docker_container_info:
    name: "{{clone_dir}}-execution-1" 
  register: execution_info

- name: Get consensus  container info
  docker_container_info:
    name: "{{clone_dir}}-consensus-1"
  register: consensus_info

- name: Pretty-print consensus JSON
  shell: echo '{{ consensus_info | to_nice_json }}'
  register: consensus_json

- name: Print consensus info
  debug:
    msg: "{{ consensus_json.stdout }}"
    verbosity: 1

- name: Pretty-print execution JSON
  shell: echo '{{ execution_info | to_nice_json }}'
  register: execution_json

- name: Print execution info
  debug:
    msg: "{{ execution_json.stdout }}"
    verbosity: 1

- name: Fail if consensus or execution container is not running
  fail:
    msg: "Either consensus or execution is not running"
  when: >
    consensus_info.exists and
    (
      not consensus_info.container.State.Running or
      consensus_info.container.State.ExitCode != 0 or
      not execution_info.container.State.Running or
      execution_info.container.State.ExitCode != 0
    )

- name: Get version
  ansible.builtin.shell: ./ethd version
  args:
    chdir: ~/{{clone_dir}}
    executable: /bin/bash
  register: version_output
  when: consensus_info.exists

- name: ./ethd version output
  debug:
    var: version_output.stdout_lines
  when: consensus_info.exists
